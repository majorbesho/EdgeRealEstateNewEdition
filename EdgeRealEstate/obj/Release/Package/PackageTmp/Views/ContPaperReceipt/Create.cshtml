@model EdgeRealEstate.Entities.ContPaperReceipt

@{
    ViewBag.Title = "create PaperReceipt";
    Layout = "~/Views/Shared/_AdminPage.cshtml";
}
<br />
<h3 style="text-align:center">حركة مساهم</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" dir="rtl">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ContributorId, (IEnumerable<SelectListItem>)ViewBag.Contributor, "اختر", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContributorId, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.ContributorId, "المساهم", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>

    <div class="form-group">
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.ProjectId, (IEnumerable<SelectListItem>)ViewBag.Projects,"اختر", new { @class = "form-control" })
            @*@Html.ValidationMessageFor(model => model.Project_id, "", new { @class = "text-danger" })*@
        </div>
        @Html.LabelFor(model => model.ProjectId, "المشروع", htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-4">
            @Html.DropDownList("Types", ViewData["Types"] as List<SelectListItem>
    , "اختر", new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.CrdrefType, "", new { @class = "text-danger" })
</div>
        @Html.LabelFor(model => model.CrdrefType, "نوع الحركة", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.empId, (IEnumerable<SelectListItem>)ViewBag.Employees,null , new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.empId, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.empId, "الموظف مدخل البيانات", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.salesManId, (IEnumerable<SelectListItem>)ViewBag.SalesMans, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.salesManId, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.salesManId, "المندوب", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-5">
        </div>
        <div class="col-md-5">
            @Html.DropDownListFor(model => model.paidMethod, (IEnumerable<SelectListItem>)ViewBag.paidMethod, "اختر", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.paidMethod, "", new { @class = "text-danger" })
            @*@Html.TextBoxFor(model => model.paidMethod, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.paidMethod, "", new { @class = "text-danger" })*@
        </div>
        @Html.LabelFor(model => model.paidMethod, "طريقة الدفع", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Crdpaid, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Crdpaid, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Crdpaid, "المدفوع", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.CrdrefType, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CrdrefType, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.CrdrefType, "نوع المرجع", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @(Html.Kendo().DatePicker().Name("Crdindate").Format("yyyy/MM/dd").Min(DateTime.Today.AddDays(1)).HtmlAttributes(new { @class = "form-control" }))
            @Html.ValidationMessageFor(model => model.Crdindate, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Crdindate, "فى تاريخ", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Crdnotes, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Crdnotes, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.Crdnotes, "ملاحظات", htmlAttributes: new { @class = "control-label col-md-2" })
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="حفظ" class="btn btn-primary" /> |
            @Html.ActionLink("رجوع", "Index")
        </div>
    </div>
    @if (ViewBag.msgg == 1)
    {
        <div class="form-group">
            <div class="alert alert-success alert-dismissable fade-in" id="success-alert">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>تم الحفظ بنجاح</strong>
            </div>
        </div>
    }
</div>
}

<script>
    $("#success-alert").fadeTo(2000, 500).slideUp(500, function(){
    $("#success-alert").slideUp(500);
});
</script>



